{"version":3,"sources":["../src/useless.js"],"names":[],"mappings":"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","file":"useless.js","sourcesContent":["import cssLib from 'css'\nimport cheerio from 'cheerio';\nimport cssesc from 'cssesc';\n\n/**\n * Useless(html, css) -> css\n */\nexport default function Useless(html, css){\n  var $ = cheerio.load(html)\n  return reduceCss(css);\n\n  function reduceCss(css) {\n    let ast = cssLib.parse(css || '');\n    let candidateRules = ast.stylesheet.rules;\n\n    let activeRules = candidateRules.map((rule) => {\n      switch (rule.type) {\n        case 'rule':\n          rule.selectors = rule.selectors.filter(filterSelector)\n          return rule.selectors.length == 0 ? null : rule\n          break;\n        case 'media':\n          rule.rules = rule.rules.filter((rule) => {\n            return rule.type === 'rule'\n          }).map((rule) => {\n            rule.selectors = rule.selectors.filter(filterSelector)\n            return rule.selectors.length == 0 ? null : rule\n          }).filter((rule) => {\n            return rule !== null && rule !== undefined\n          })\n          return rule.rules.length == 0 ? null : rule\n          break;\n        case 'comment':\n          // curently not including comments\n          break;\n        case 'keyframes':\n          return rule;\n          break;\n        case 'font-face':\n          return rule;\n          break;\n        default:\n          console.error(`Unknown rule! Add ${rule.type} as case to switch on!`);\n          return rule;\n          break;\n      }\n    }).filter((rule) => {\n      return rule !== null && rule !== undefined\n    })\n    ast.stylesheet.rules = activeRules;\n    return cssLib.stringify(ast)\n  }\n\n  function filterSelector(selector) {\n    let result = false\n    let override = /(@|(:link)|(:visited)|:(active)|(:hover)|(:focus)|(:target)|(:disable)|(:enabled)|(:checked)|(::)|(:before)|(:after))/\n    if (override.test(selector)) {\n      if (/::/.test(selector)) {\n        selector = selector.substring(0, selector.lastIndexOf('::'))\n      } else {\n        selector = selector.substring(0, selector.lastIndexOf(':'))\n      }\n    }\n    let escaped = selector.replace(/([\\@\\:\\(\\)])/g, '\\\\$1' ) //\"\n    let selection = $(escaped);\n    result = selection.length > 0;\n    return result;\n  }\n}\n"]}